Benchmark from 2022-07-13 04:28Z on commit c651788

CPU information:
Architecture:                    x86_64
CPU(s):                          12
On-line CPU(s) list:             0-11
Thread(s) per core:              2
Socket(s):                       1
Model name:                      AMD Ryzen 5 3600X 6-Core Processor
CPU MHz:                         2120.962
CPU max MHz:                     3800.0000
CPU min MHz:                     2200.0000
NUMA node0 CPU(s):               0-11




running 22 tests
test algorithms::modhamming::tests::test_basic ... ignored
test algorithms::modhamming::tests::test_empty_string ... ignored
test algorithms::modhamming::tests::test_iter ... ignored
test algorithms::modhamming::tests::test_panic_on_not_equal - should panic ... ignored
test algorithms::modhamming::tests::test_slice ... ignored
test algorithms::modjaccard::tests::test_jaccard_a_empty ... ignored
test algorithms::modjaccard::tests::test_jaccard_b_empty ... ignored
test algorithms::modjaccard::tests::test_jaccard_empty ... ignored
test algorithms::modjaccard::tests::test_jaccard_str_sets ... ignored
test algorithms::modlevenshtein::tests::test_levenshtein_basic ... ignored
test algorithms::modlevenshtein::tests::test_levenshtein_empty ... ignored
test algorithms::modlevenshtein::tests::test_levenshtein_equal ... ignored
test algorithms::modlevenshtein::tests::test_levenshtein_limit ... ignored
test algorithms::modlevenshtein::tests::test_levenshtein_limit_one_empty ... ignored
test algorithms::modlevenshtein::tests::test_levenshtein_limit_weight_slice ... ignored
test algorithms::modlevenshtein::tests::test_levenshtein_one_empty ... ignored
test algorithms::modlevenshtein::tests::test_levenshtein_weight_deletion ... ignored
test algorithms::modlevenshtein::tests::test_levenshtein_weight_insertion ... ignored
test algorithms::modlevenshtein::tests::test_levenshtein_weight_substitution ... ignored
test tokenizers::main::tests::test_remove_chars ... ignored
test tokenizers::main::tests::test_split ... ignored
test tokenizers::main::tests::test_trim_end ... ignored

test result: ok. 0 passed; 0 failed; 22 ignored; 0 measured; 0 filtered out; finished in 0.00s

WARNING: HTML report generation will become a non-default optional feature in Criterion.rs 0.4.0.
This feature is being moved to cargo-criterion (https://github.com/bheisler/cargo-criterion) and will be optional in a future version of Criterion.rs. To silence this warning, either switch to cargo-criterion or enable the 'html_reports' feature in your Cargo.toml.

Gnuplot not found, using plotters backend
Benchmarking Collect chars
Benchmarking Collect chars: Warming up for 3.0000 s
Benchmarking Collect chars: Collecting 100 samples in estimated 5.0001 s (39M iterations)
Benchmarking Collect chars: Analyzing
Collect chars           time:   [118.98 ns 119.27 ns 119.59 ns]
                        change: [+1.0695% +1.6313% +2.2105%] (p = 0.00 < 0.05)
                        Performance has regressed.
Found 3 outliers among 100 measurements (3.00%)
  2 (2.00%) high mild
  1 (1.00%) high severe

Benchmarking Iterate collected chars
Benchmarking Iterate collected chars: Warming up for 3.0000 s
Benchmarking Iterate collected chars: Collecting 100 samples in estimated 5.0000 s (22B iterations)
Benchmarking Iterate collected chars: Analyzing
Iterate collected chars time:   [231.88 ps 232.68 ps 233.66 ps]
                        change: [+0.4518% +0.7990% +1.1654%] (p = 0.00 < 0.05)
                        Change within noise threshold.
Found 10 outliers among 100 measurements (10.00%)
  3 (3.00%) high mild
  7 (7.00%) high severe

Benchmarking Iterate collected chars deref
Benchmarking Iterate collected chars deref: Warming up for 3.0000 s
Benchmarking Iterate collected chars deref: Collecting 100 samples in estimated 5.0000 s (22B iterations)
Benchmarking Iterate collected chars deref: Analyzing
Iterate collected chars deref
                        time:   [233.37 ps 234.51 ps 235.75 ps]
                        change: [-2.1132% -1.0383% -0.1393%] (p = 0.03 < 0.05)
                        Change within noise threshold.
Found 22 outliers among 100 measurements (22.00%)
  18 (18.00%) high mild
  4 (4.00%) high severe

Benchmarking Iterate uncollected chars
Benchmarking Iterate uncollected chars: Warming up for 3.0000 s
Benchmarking Iterate uncollected chars: Collecting 100 samples in estimated 5.0000 s (498M iterations)
Benchmarking Iterate uncollected chars: Analyzing
Iterate uncollected chars
                        time:   [10.076 ns 10.167 ns 10.289 ns]
                        change: [+0.8478% +2.5317% +4.1984%] (p = 0.00 < 0.05)
                        Change within noise threshold.
Found 13 outliers among 100 measurements (13.00%)
  5 (5.00%) high mild
  8 (8.00%) high severe

Benchmarking Iterate uncollected bytes
Benchmarking Iterate uncollected bytes: Warming up for 3.0000 s
Benchmarking Iterate uncollected bytes: Collecting 100 samples in estimated 5.0000 s (21B iterations)
Benchmarking Iterate uncollected bytes: Analyzing
Iterate uncollected bytes
                        time:   [231.40 ps 232.36 ps 233.68 ps]
                        change: [-1.2291% -0.5276% +0.1120%] (p = 0.13 > 0.05)
                        No change in performance detected.
Found 12 outliers among 100 measurements (12.00%)
  7 (7.00%) high mild
  5 (5.00%) high severe

WARNING: HTML report generation will become a non-default optional feature in Criterion.rs 0.4.0.
This feature is being moved to cargo-criterion (https://github.com/bheisler/cargo-criterion) and will be optional in a future version of Criterion.rs. To silence this warning, either switch to cargo-criterion or enable the 'html_reports' feature in your Cargo.toml.

Gnuplot not found, using plotters backend
Benchmarking Base Levenshtein
Benchmarking Base Levenshtein: Warming up for 3.0000 s
Benchmarking Base Levenshtein: Collecting 100 samples in estimated 5.0011 s (17M iterations)
Benchmarking Base Levenshtein: Analyzing
Base Levenshtein        time:   [300.04 ns 302.64 ns 305.24 ns]
                        change: [+0.8949% +1.7542% +2.8481%] (p = 0.00 < 0.05)
                        Change within noise threshold.
Found 6 outliers among 100 measurements (6.00%)
  3 (3.00%) high mild
  3 (3.00%) high severe

Benchmarking Quick Levenshtein
Benchmarking Quick Levenshtein: Warming up for 3.0000 s
Benchmarking Quick Levenshtein: Collecting 100 samples in estimated 5.0005 s (17M iterations)
Benchmarking Quick Levenshtein: Analyzing
Quick Levenshtein       time:   [288.58 ns 290.35 ns 292.36 ns]
                        change: [-4.8230% -2.5270% +0.1406%] (p = 0.04 < 0.05)
                        Change within noise threshold.
Found 9 outliers among 100 measurements (9.00%)
  4 (4.00%) high mild
  5 (5.00%) high severe

Benchmarking Base Levenshtein limit
Benchmarking Base Levenshtein limit: Warming up for 3.0000 s
Benchmarking Base Levenshtein limit: Collecting 100 samples in estimated 5.0005 s (17M iterations)
Benchmarking Base Levenshtein limit: Analyzing
Base Levenshtein limit  time:   [296.47 ns 297.03 ns 297.63 ns]
                        change: [+0.7874% +1.2095% +1.6848%] (p = 0.00 < 0.05)
                        Change within noise threshold.
Found 4 outliers among 100 measurements (4.00%)
  1 (1.00%) high mild
  3 (3.00%) high severe

Benchmarking Levenshtein Weights
Benchmarking Levenshtein Weights: Warming up for 3.0000 s
Benchmarking Levenshtein Weights: Collecting 100 samples in estimated 5.0024 s (9.6M iterations)
Benchmarking Levenshtein Weights: Analyzing
Levenshtein Weights     time:   [518.14 ns 518.89 ns 519.74 ns]
                        change: [-2.1270% -1.7680% -1.4387%] (p = 0.00 < 0.05)
                        Performance has improved.
Found 11 outliers among 100 measurements (11.00%)
  3 (3.00%) low mild
  4 (4.00%) high mild
  4 (4.00%) high severe

Benchmarking Base Levenshtein Empty
Benchmarking Base Levenshtein Empty: Warming up for 3.0000 s
Benchmarking Base Levenshtein Empty: Collecting 100 samples in estimated 5.0000 s (1.7B iterations)
Benchmarking Base Levenshtein Empty: Analyzing
Base Levenshtein Empty  time:   [3.0218 ns 3.0282 ns 3.0362 ns]
                        change: [+0.1281% +0.6361% +1.1104%] (p = 0.01 < 0.05)
                        Change within noise threshold.
Found 12 outliers among 100 measurements (12.00%)
  5 (5.00%) high mild
  7 (7.00%) high severe

Benchmarking Quick Levenshtein Empty
Benchmarking Quick Levenshtein Empty: Warming up for 3.0000 s
Benchmarking Quick Levenshtein Empty: Collecting 100 samples in estimated 5.0000 s (1.6B iterations)
Benchmarking Quick Levenshtein Empty: Analyzing
Quick Levenshtein Empty time:   [3.0143 ns 3.0167 ns 3.0195 ns]
                        change: [-1.4986% -1.1310% -0.7071%] (p = 0.00 < 0.05)
                        Change within noise threshold.
Found 7 outliers among 100 measurements (7.00%)
  3 (3.00%) high mild
  4 (4.00%) high severe

Benchmarking Levenshtein Weights Empty
Benchmarking Levenshtein Weights Empty: Warming up for 3.0000 s
Benchmarking Levenshtein Weights Empty: Collecting 100 samples in estimated 5.0128 s (1.6M iterations)
Benchmarking Levenshtein Weights Empty: Analyzing
Levenshtein Weights Empty
                        time:   [3.0841 µs 3.1000 µs 3.1213 µs]
                        change: [-3.1054% -2.4649% -1.8019%] (p = 0.00 < 0.05)
                        Performance has improved.
Found 11 outliers among 100 measurements (11.00%)
  2 (2.00%) high mild
  9 (9.00%) high severe

Benchmarking Base Levenshtein Long
Benchmarking Base Levenshtein Long: Warming up for 3.0000 s

Warning: Unable to complete 100 samples in 5.0s. You may wish to increase target time to 6.1s, enable flat sampling, or reduce sample count to 60.
Benchmarking Base Levenshtein Long: Collecting 100 samples in estimated 6.0879 s (5050 iterations)
Benchmarking Base Levenshtein Long: Analyzing
Base Levenshtein Long   time:   [1.1990 ms 1.1998 ms 1.2006 ms]
                        change: [-3.6011% -2.6221% -1.8104%] (p = 0.00 < 0.05)
                        Performance has improved.
Found 11 outliers among 100 measurements (11.00%)
  4 (4.00%) high mild
  7 (7.00%) high severe

Benchmarking Limited Levenshtein Long
Benchmarking Limited Levenshtein Long: Warming up for 3.0000 s
Benchmarking Limited Levenshtein Long: Collecting 100 samples in estimated 5.0015 s (4.3M iterations)
Benchmarking Limited Levenshtein Long: Analyzing
Limited Levenshtein Long
                        time:   [1.1554 µs 1.1559 µs 1.1565 µs]
                        change: [-2.0920% -1.7698% -1.4708%] (p = 0.00 < 0.05)
                        Performance has improved.
Found 10 outliers among 100 measurements (10.00%)
  4 (4.00%) high mild
  6 (6.00%) high severe

Benchmarking Levenshtein Weights Long
Benchmarking Levenshtein Weights Long: Warming up for 3.0000 s
Benchmarking Levenshtein Weights Long: Collecting 100 samples in estimated 5.0020 s (1.6M iterations)
Benchmarking Levenshtein Weights Long: Analyzing
Levenshtein Weights Long
                        time:   [3.1034 µs 3.1078 µs 3.1132 µs]
                        change: [-1.0572% -0.3821% +0.2264%] (p = 0.26 > 0.05)
                        No change in performance detected.
Found 6 outliers among 100 measurements (6.00%)
  2 (2.00%) high mild
  4 (4.00%) high severe


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

